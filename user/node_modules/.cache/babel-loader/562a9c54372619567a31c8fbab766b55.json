{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction getTimeParts(time, lastUnit) {\n  var units = ['ms', 's', 'm', 'h', 'd'];\n  var lastUnitIndex = units.findIndex(function (unit) {\n    return unit === lastUnit;\n  });\n  var dividers = [1000, 60, 60, 24, 1];\n  var dividersAcc = [1, 1000, 60000, 3600000, 86400000];\n  var startValue = {\n    ms: 0,\n    s: 0,\n    m: 0,\n    h: 0,\n    d: 0\n  };\n  var output = units.reduce(function (obj, unit, index) {\n    if (index > lastUnitIndex) {\n      obj[unit] = 0;\n    } else if (index === lastUnitIndex) {\n      obj[unit] = Math.floor(time / dividersAcc[index]);\n    } else {\n      obj[unit] = Math.floor(time / dividersAcc[index]) % dividers[index];\n    }\n    return obj;\n  }, startValue);\n  return output;\n}\nexports.default = getTimeParts;","map":{"version":3,"sources":["../../../src/lib/helpers/getTimeParts.ts"],"names":[],"mappings":";;;;;AAEA,SAAwB,YAAY,CAAC,IAAY,EAAE,QAAc,EAAA;EAC/D,IAAM,KAAK,GAAW,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChD,IAAM,aAAa,GAAG,KAAK,CAAC,SAAS,CAAC,UAAA,IAAI,EAAA;IAAI,OAAA,IAAI,KAAK,QAAQ;EAAjB,CAAiB,CAAC;EAEhE,IAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACtC,IAAM,WAAW,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC;EAEvD,IAAM,UAAU,GAAG;IACjB,EAAE,EAAE,CAAC;IACL,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE;GACJ;EAED,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CACzB,UAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAA;IACf,IAAI,KAAK,GAAG,aAAa,EAAE;MACzB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;KACd,MAAM,IAAI,KAAK,KAAK,aAAa,EAAE;MAClC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;KAClD,MAAM;MACL,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;IACpE;IAED,OAAO,GAAG;EACZ,CAAC,EACD,UAAU,CACX;EAED,OAAO,MAAM;AACf;AA/BA,OAAA,CAAA,OAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction getTimeParts(time, lastUnit) {\r\n    var units = ['ms', 's', 'm', 'h', 'd'];\r\n    var lastUnitIndex = units.findIndex(function (unit) { return unit === lastUnit; });\r\n    var dividers = [1000, 60, 60, 24, 1];\r\n    var dividersAcc = [1, 1000, 60000, 3600000, 86400000];\r\n    var startValue = {\r\n        ms: 0,\r\n        s: 0,\r\n        m: 0,\r\n        h: 0,\r\n        d: 0,\r\n    };\r\n    var output = units.reduce(function (obj, unit, index) {\r\n        if (index > lastUnitIndex) {\r\n            obj[unit] = 0;\r\n        }\r\n        else if (index === lastUnitIndex) {\r\n            obj[unit] = Math.floor(time / dividersAcc[index]);\r\n        }\r\n        else {\r\n            obj[unit] = Math.floor(time / dividersAcc[index]) % dividers[index];\r\n        }\r\n        return obj;\r\n    }, startValue);\r\n    return output;\r\n}\r\nexports.default = getTimeParts;\r\n//# sourceMappingURL=getTimeParts.js.map"]},"metadata":{},"sourceType":"script"}