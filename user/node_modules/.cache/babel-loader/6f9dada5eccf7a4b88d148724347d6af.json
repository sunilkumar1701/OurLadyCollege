{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar getTimeParts_1 = __importDefault(require(\"../helpers/getTimeParts\"));\nvar now_1 = __importDefault(require(\"../helpers/now\"));\nvar TimerState_1 = __importDefault(require(\"./TimerState\"));\nvar TimerModel = /** @class */function () {\n  function TimerModel(_a) {\n    var initialTime = _a.initialTime,\n      direction = _a.direction,\n      timeToUpdate = _a.timeToUpdate,\n      lastUnit = _a.lastUnit,\n      checkpoints = _a.checkpoints,\n      onChange = _a.onChange;\n    this.internalTime = now_1.default();\n    this.initialTime = initialTime;\n    this.time = initialTime;\n    this.direction = direction;\n    this.timeToUpdate = timeToUpdate;\n    this.lastUnit = lastUnit;\n    this.checkpoints = checkpoints;\n    this.innerState = new TimerState_1.default(onChange);\n    this.onChange = onChange;\n    this.timerId = null;\n  }\n  Object.defineProperty(TimerModel.prototype, \"state\", {\n    get: function () {\n      return this.innerState.getState();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TimerModel.prototype, \"timeParts\", {\n    get: function () {\n      return this.getTimeParts(this.computeTime());\n    },\n    enumerable: true,\n    configurable: true\n  });\n  TimerModel.prototype.getTimeParts = function (time) {\n    return getTimeParts_1.default(time, this.lastUnit);\n  };\n  TimerModel.prototype.setTime = function (time) {\n    this.internalTime = now_1.default();\n    this.initialTime = time;\n    this.time = this.initialTime;\n    this.onChange(this.getTimeParts(this.time));\n  };\n  TimerModel.prototype.getTime = function () {\n    return this.time;\n  };\n  TimerModel.prototype.setLastUnit = function (lastUnit) {\n    if (this.innerState.isPlaying()) {\n      this.pause();\n      this.lastUnit = lastUnit;\n      this.resume(true);\n    } else {\n      this.lastUnit = lastUnit;\n    }\n  };\n  TimerModel.prototype.setTimeToUpdate = function (interval) {\n    if (this.innerState.isPlaying()) {\n      this.pause();\n      this.timeToUpdate = interval;\n      this.resume();\n    } else {\n      this.timeToUpdate = interval;\n    }\n  };\n  TimerModel.prototype.setDirection = function (direction) {\n    this.direction = direction;\n  };\n  TimerModel.prototype.setCheckpoints = function (checkpoints) {\n    this.checkpoints = checkpoints;\n  };\n  TimerModel.prototype.start = function () {\n    if (this.innerState.setPlaying()) {\n      this.setTimerInterval(true);\n    }\n  };\n  TimerModel.prototype.resume = function (callImmediately) {\n    if (callImmediately === void 0) {\n      callImmediately = false;\n    }\n    if (!this.innerState.isStopped() && this.innerState.setPlaying()) {\n      this.setTimerInterval(callImmediately);\n    }\n  };\n  TimerModel.prototype.pause = function () {\n    if (this.innerState.setPaused()) {\n      clearInterval(this.timerId);\n    }\n  };\n  TimerModel.prototype.stop = function () {\n    if (this.innerState.setStopped()) {\n      clearInterval(this.timerId);\n    }\n  };\n  TimerModel.prototype.reset = function () {\n    this.time = this.initialTime;\n    this.onChange(this.getTimeParts(this.time));\n  };\n  TimerModel.prototype.setTimerInterval = function (callImmediately) {\n    var _this = this;\n    if (callImmediately === void 0) {\n      callImmediately = false;\n    }\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n    this.internalTime = now_1.default();\n    var repeatedFunc = function () {\n      var oldTime = _this.time;\n      var updatedTime = _this.computeTime();\n      _this.onChange(_this.getTimeParts(updatedTime));\n      _this.checkpoints.map(function (_a) {\n        var time = _a.time,\n          callback = _a.callback;\n        var checkForForward = time > oldTime && time <= updatedTime;\n        var checkForBackward = time < oldTime && time >= updatedTime;\n        var checkIntersection = _this.direction === 'backward' ? checkForBackward : checkForForward;\n        if (checkIntersection) {\n          callback();\n        }\n      });\n    };\n    callImmediately && this.onChange(this.getTimeParts(this.time));\n    this.timerId = window.setInterval(repeatedFunc, this.timeToUpdate);\n  };\n  TimerModel.prototype.computeTime = function () {\n    if (this.innerState.isPlaying()) {\n      var currentInternalTime = now_1.default();\n      var delta = Math.abs(currentInternalTime - this.internalTime);\n      switch (this.direction) {\n        case 'forward':\n          this.time = this.time + delta;\n          this.internalTime = currentInternalTime;\n          return this.time;\n        case 'backward':\n          {\n            this.time = this.time - delta;\n            this.internalTime = currentInternalTime;\n            if (this.time < 0) {\n              this.stop();\n              return 0;\n            }\n            return this.time;\n          }\n        default:\n          return this.time;\n      }\n    }\n    return this.time;\n  };\n  return TimerModel;\n}();\nexports.TimerModel = TimerModel;","map":{"version":3,"sources":["../../../src/lib/models/TimerModel.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar getTimeParts_1 = __importDefault(require(\"../helpers/getTimeParts\"));\nvar now_1 = __importDefault(require(\"../helpers/now\"));\nvar TimerState_1 = __importDefault(require(\"./TimerState\"));\nvar TimerModel = /** @class */ (function () {\n    function TimerModel(_a) {\n        var initialTime = _a.initialTime, direction = _a.direction, timeToUpdate = _a.timeToUpdate, lastUnit = _a.lastUnit, checkpoints = _a.checkpoints, onChange = _a.onChange;\n        this.internalTime = now_1.default();\n        this.initialTime = initialTime;\n        this.time = initialTime;\n        this.direction = direction;\n        this.timeToUpdate = timeToUpdate;\n        this.lastUnit = lastUnit;\n        this.checkpoints = checkpoints;\n        this.innerState = new TimerState_1.default(onChange);\n        this.onChange = onChange;\n        this.timerId = null;\n    }\n    Object.defineProperty(TimerModel.prototype, \"state\", {\n        get: function () {\n            return this.innerState.getState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TimerModel.prototype, \"timeParts\", {\n        get: function () {\n            return this.getTimeParts(this.computeTime());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TimerModel.prototype.getTimeParts = function (time) {\n        return getTimeParts_1.default(time, this.lastUnit);\n    };\n    TimerModel.prototype.setTime = function (time) {\n        this.internalTime = now_1.default();\n        this.initialTime = time;\n        this.time = this.initialTime;\n        this.onChange(this.getTimeParts(this.time));\n    };\n    TimerModel.prototype.getTime = function () {\n        return this.time;\n    };\n    TimerModel.prototype.setLastUnit = function (lastUnit) {\n        if (this.innerState.isPlaying()) {\n            this.pause();\n            this.lastUnit = lastUnit;\n            this.resume(true);\n        }\n        else {\n            this.lastUnit = lastUnit;\n        }\n    };\n    TimerModel.prototype.setTimeToUpdate = function (interval) {\n        if (this.innerState.isPlaying()) {\n            this.pause();\n            this.timeToUpdate = interval;\n            this.resume();\n        }\n        else {\n            this.timeToUpdate = interval;\n        }\n    };\n    TimerModel.prototype.setDirection = function (direction) {\n        this.direction = direction;\n    };\n    TimerModel.prototype.setCheckpoints = function (checkpoints) {\n        this.checkpoints = checkpoints;\n    };\n    TimerModel.prototype.start = function () {\n        if (this.innerState.setPlaying()) {\n            this.setTimerInterval(true);\n        }\n    };\n    TimerModel.prototype.resume = function (callImmediately) {\n        if (callImmediately === void 0) { callImmediately = false; }\n        if (!this.innerState.isStopped() && this.innerState.setPlaying()) {\n            this.setTimerInterval(callImmediately);\n        }\n    };\n    TimerModel.prototype.pause = function () {\n        if (this.innerState.setPaused()) {\n            clearInterval(this.timerId);\n        }\n    };\n    TimerModel.prototype.stop = function () {\n        if (this.innerState.setStopped()) {\n            clearInterval(this.timerId);\n        }\n    };\n    TimerModel.prototype.reset = function () {\n        this.time = this.initialTime;\n        this.onChange(this.getTimeParts(this.time));\n    };\n    TimerModel.prototype.setTimerInterval = function (callImmediately) {\n        var _this = this;\n        if (callImmediately === void 0) { callImmediately = false; }\n        if (this.timerId) {\n            clearInterval(this.timerId);\n        }\n        this.internalTime = now_1.default();\n        var repeatedFunc = function () {\n            var oldTime = _this.time;\n            var updatedTime = _this.computeTime();\n            _this.onChange(_this.getTimeParts(updatedTime));\n            _this.checkpoints.map(function (_a) {\n                var time = _a.time, callback = _a.callback;\n                var checkForForward = time > oldTime && time <= updatedTime;\n                var checkForBackward = time < oldTime && time >= updatedTime;\n                var checkIntersection = _this.direction === 'backward' ?\n                    checkForBackward :\n                    checkForForward;\n                if (checkIntersection) {\n                    callback();\n                }\n            });\n        };\n        callImmediately && this.onChange(this.getTimeParts(this.time));\n        this.timerId = window.setInterval(repeatedFunc, this.timeToUpdate);\n    };\n    TimerModel.prototype.computeTime = function () {\n        if (this.innerState.isPlaying()) {\n            var currentInternalTime = now_1.default();\n            var delta = Math.abs(currentInternalTime - this.internalTime);\n            switch (this.direction) {\n                case 'forward':\n                    this.time = this.time + delta;\n                    this.internalTime = currentInternalTime;\n                    return this.time;\n                case 'backward': {\n                    this.time = this.time - delta;\n                    this.internalTime = currentInternalTime;\n                    if (this.time < 0) {\n                        this.stop();\n                        return 0;\n                    }\n                    return this.time;\n                }\n                default:\n                    return this.time;\n            }\n        }\n        return this.time;\n    };\n    return TimerModel;\n}());\nexports.TimerModel = TimerModel;\n//# sourceMappingURL=TimerModel.js.map"]},"metadata":{},"sourceType":"script"}